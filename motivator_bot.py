import random
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes, JobQueue

# –°–ª–æ–≤–∞—Ä—å —Å –∑–∞–¥–∞—á–∞–º–∏
user_jobs = {}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–æ—Ç–∏–≤–∞—Ü–∏–∏
async def send_motivation(chat_id, context):
    try:
        with open("quotes.txt", encoding="utf-8") as f:
            quotes = f.readlines()
        quote = random.choice(quotes).strip() if quotes else "–§–∞–π–ª —Å —Ü–∏—Ç–∞—Ç–∞–º–∏ –ø—É—Å—Ç üòî"
    except FileNotFoundError:
        quote = "–§–∞–π–ª quotes.txt –Ω–µ –Ω–∞–π–¥–µ–Ω ‚ùå"
    await context.bot.send_message(chat_id=chat_id, text=f"‚ú® {quote}")

# –ö–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ä—Ç–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    buttons = [
        [InlineKeyboardButton("üí™ –ü–æ–ª—É—á–∏—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏—é", callback_data="start")],
        [InlineKeyboardButton("‚õîÔ∏è –°—Ç–æ–ø", callback_data="stop")]
    ]
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ú–æ—Ç–∏–≤–∞—Ü–∏—è –ë–†–û üëá", reply_markup=InlineKeyboardMarkup(buttons))

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    chat_id = query.message.chat_id

    if query.data == "start":
        await send_motivation(chat_id, context)
        stop_job(chat_id)
        job = context.job_queue.run_repeating(callback=send_motivation_job, interval=1800, first=1800, chat_id=chat_id)
        user_jobs[chat_id] = job
        await context.bot.send_message(chat_id, "–ê–≤—Ç–æ-–º–æ—Ç–∏–≤–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞ –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç! üîÅ")

    elif query.data == "stop":
        if stop_job(chat_id):
            await context.bot.send_message(chat_id, "–û—Å—Ç–∞–Ω–æ–≤–∏–ª –º–æ—Ç–∏–≤–∞—Ü–∏—é ‚õîÔ∏è")
        else:
            await context.bot.send_message(chat_id, "–ú–æ—Ç–∏–≤–∞—Ü–∏—è –∏ —Ç–∞–∫ –Ω–µ —à–ª–∞ üòâ")

# –ê–≤—Ç–æ-—Ä–∞—Å—Å—ã–ª–∫–∞
async def send_motivation_job(context: ContextTypes.DEFAULT_TYPE):
    await send_motivation(context.job.chat_id, context)

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–¥–∞—á–∏
def stop_job(chat_id):
    job = user_jobs.pop(chat_id, None)
    if job:
        job.schedule_removal()
        return True
    return False

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
def main():
    app = Application.builder().token("–¢–í–û–ô –¢–û–ö–ï–ù").build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω ‚úÖ")
    app.run_polling()

if __name__ == "__main__":
    main()
